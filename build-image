#!/usr/bin/env bash

DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)"

.  "$DIR/lib/git.sh"
.  "$DIR/lib/pp.sh"
.  "$DIR/lib/script.sh"

if ! NEEDS=$(@script-needs git podman jq); then
    echo "Script needs $NEEDS" 
    exit 1
fi

if ! @git-is-repo; then
    echo "Not a Git repo" >&2
    exit 1
fi

GIT_DIR=$(@git-dir)

cd $GIT_DIR

if [[ "$1" == "commit" ]] && (@git-has-staged || @git-has-changed)
then
    @pp-error "Git repo is not clean" >&2
    exit 1
fi

if [[ ! -f "Containerfile" ]] && [[ ! -f "Dockerfile" ]]; then
    @pp-error "No Dockerfile or Containerfile found in: $GIT_DIR"
    exit 1
fi

IMAGE_JSON="image.json"

if [[ ! -f $IMAGE_JSON ]]; then
    @pp-error "No $IMAGE_JSON found in $GIT_DIR"
    exit 1
fi

if ! REPOSITORY=$(jq -re ".repository" $IMAGE_JSON); then
    @pp-error "Key \"repository\" is missing or empty in $IMAGE_JSON"
    exit 1
fi

if [[ "$1" == "commit" ]]; then
    TAG="$(@git-branch)_$(@git-short-hash)"
else
    TAG="$(@git-branch)_dev"
fi

IMAGE="$REPOSITORY:$TAG"

if ([[ "$1" == "commit" ]] && podman image exists "$IMAGE") || podman build --tag $IMAGE .; then
    @pp-color blue
    @pp-box "BUILD SUCCESS │ $IMAGE"
    @pp-color none
else
    @pp-color red
    @pp-box "BUILD FAILED │ $IMAGE"
    @pp-color none
fi
